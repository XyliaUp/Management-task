#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace TMS.LTS
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ssms")]
	public partial class LTSBase : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InsertBarcode(Barcode instance);
    partial void UpdateBarcode(Barcode instance);
    partial void DeleteBarcode(Barcode instance);
    partial void InsertCustom(Custom instance);
    partial void UpdateCustom(Custom instance);
    partial void DeleteCustom(Custom instance);
    partial void InsertDriver(Driver instance);
    partial void UpdateDriver(Driver instance);
    partial void DeleteDriver(Driver instance);
    partial void InsertItem(Item instance);
    partial void UpdateItem(Item instance);
    partial void DeleteItem(Item instance);
    partial void InsertOrder(Order instance);
    partial void UpdateOrder(Order instance);
    partial void DeleteOrder(Order instance);
    partial void InsertOrderChanged(OrderChanged instance);
    partial void UpdateOrderChanged(OrderChanged instance);
    partial void DeleteOrderChanged(OrderChanged instance);
    partial void InsertOutlet(Outlet instance);
    partial void UpdateOutlet(Outlet instance);
    partial void DeleteOutlet(Outlet instance);
    partial void InsertTag(Tag instance);
    partial void UpdateTag(Tag instance);
    partial void DeleteTag(Tag instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertVehicle(Vehicle instance);
    partial void UpdateVehicle(Vehicle instance);
    partial void DeleteVehicle(Vehicle instance);
    partial void InsertVehicleSchedule(VehicleSchedule instance);
    partial void UpdateVehicleSchedule(VehicleSchedule instance);
    partial void DeleteVehicleSchedule(VehicleSchedule instance);
    #endregion
		
		public LTSBase(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LTSBase(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LTSBase(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LTSBase(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Barcode> Barcode
		{
			get
			{
				return this.GetTable<Barcode>();
			}
		}
		
		public System.Data.Linq.Table<Custom> Custom
		{
			get
			{
				return this.GetTable<Custom>();
			}
		}
		
		public System.Data.Linq.Table<Driver> Driver
		{
			get
			{
				return this.GetTable<Driver>();
			}
		}
		
		public System.Data.Linq.Table<Item> Item
		{
			get
			{
				return this.GetTable<Item>();
			}
		}
		
		public System.Data.Linq.Table<Order> Order
		{
			get
			{
				return this.GetTable<Order>();
			}
		}
		
		public System.Data.Linq.Table<OrderChanged> OrderChanged
		{
			get
			{
				return this.GetTable<OrderChanged>();
			}
		}
		
		public System.Data.Linq.Table<Outlet> Outlet
		{
			get
			{
				return this.GetTable<Outlet>();
			}
		}
		
		public System.Data.Linq.Table<Tag> Tag
		{
			get
			{
				return this.GetTable<Tag>();
			}
		}
		
		public System.Data.Linq.Table<User> User
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<Vehicle> Vehicle
		{
			get
			{
				return this.GetTable<Vehicle>();
			}
		}
		
		public System.Data.Linq.Table<VehicleSchedule> VehicleSchedule
		{
			get
			{
				return this.GetTable<VehicleSchedule>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteBarcode")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int DeleteBarcode([global::System.Data.Linq.Mapping.ParameterAttribute(Name="BarcodeID", DbType="BigInt")] System.Nullable<long> barcodeID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), barcodeID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteCustom")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int DeleteCustom([global::System.Data.Linq.Mapping.ParameterAttribute(Name="CustomID", DbType="BigInt")] System.Nullable<long> customID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), customID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteDriver")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int DeleteDriver([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DriverID", DbType="BigInt")] System.Nullable<long> driverID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), driverID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteItem")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int DeleteItem([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItemID", DbType="BigInt")] System.Nullable<long> itemID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itemID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteOrder")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int DeleteOrder([global::System.Data.Linq.Mapping.ParameterAttribute(Name="OrderID", DbType="BigInt")] System.Nullable<long> orderID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), orderID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteOrderChanged")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int DeleteOrderChanged([global::System.Data.Linq.Mapping.ParameterAttribute(Name="OrderID", DbType="BigInt")] System.Nullable<long> orderID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), orderID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteOutlet")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int DeleteOutlet([global::System.Data.Linq.Mapping.ParameterAttribute(Name="OutletID", DbType="BigInt")] System.Nullable<long> outletID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), outletID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteTag")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int DeleteTag([global::System.Data.Linq.Mapping.ParameterAttribute(Name="TagID", DbType="BigInt")] System.Nullable<long> tagID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), tagID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteUser")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int DeleteUser([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="BigInt")] System.Nullable<long> userID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteVehicle")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int DeleteVehicle([global::System.Data.Linq.Mapping.ParameterAttribute(Name="VehicleID", DbType="BigInt")] System.Nullable<long> vehicleID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), vehicleID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteVehicleSchedule")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int DeleteVehicleSchedule([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ScheduleID", DbType="BigInt")] System.Nullable<long> scheduleID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), scheduleID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsertBarcode")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int InsertBarcode([global::System.Data.Linq.Mapping.ParameterAttribute(Name="BarcodeNumber", DbType="VarChar(200)")] string barcodeNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="BigInt")] ref System.Nullable<long> iD)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), barcodeNumber, iD);
			iD = ((System.Nullable<long>)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsertCustom")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int InsertCustom([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> register, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(255)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] System.Nullable<long> phone, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(3000)")] string password, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="BigInt")] ref System.Nullable<long> iD)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), register, name, phone, password, iD);
			iD = ((System.Nullable<long>)(result.GetParameterValue(4)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsertDriver")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int InsertDriver([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Name", DbType="VarChar(255)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DriverNum", DbType="Int")] System.Nullable<int> driverNum, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="License", DbType="BigInt")] System.Nullable<long> license, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Sex", DbType="Bit")] System.Nullable<bool> sex, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Register", DbType="DateTime")] System.Nullable<System.DateTime> register, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="BigInt")] ref System.Nullable<long> iD)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), name, driverNum, license, sex, register, iD);
			iD = ((System.Nullable<long>)(result.GetParameterValue(5)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsertItem")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int InsertItem([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItemName", DbType="VarChar(3000)")] string itemName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItemDescription", DbType="VarChar(3000)")] string itemDescription, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Status", DbType="SmallInt")] System.Nullable<short> status, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TagID", DbType="BigInt")] System.Nullable<long> tagID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BarcodeID", DbType="BigInt")] System.Nullable<long> barcodeID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItemSize", DbType="Float")] System.Nullable<double> itemSize, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItemWeight", DbType="Float")] System.Nullable<double> itemWeight, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItemNumeric", DbType="Int")] System.Nullable<int> itemNumeric, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="BigInt")] ref System.Nullable<long> iD)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itemName, itemDescription, status, tagID, barcodeID, itemSize, itemWeight, itemNumeric, iD);
			iD = ((System.Nullable<long>)(result.GetParameterValue(8)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsertOrder")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int InsertOrder(
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Status", DbType="SmallInt")] System.Nullable<short> status, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ChargeType", DbType="SmallInt")] System.Nullable<short> chargeType, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Charged", DbType="Bit")] System.Nullable<bool> charged, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ChargeAmount", DbType="BigInt")] System.Nullable<long> chargeAmount, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="OrderCustom", DbType="BigInt")] System.Nullable<long> orderCustom, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="OrderAddress", DbType="VarChar(5000)")] string orderAddress, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="OrderTime", DbType="DateTime")] System.Nullable<System.DateTime> orderTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="FinishTime", DbType="DateTime")] System.Nullable<System.DateTime> finishTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ReceiveCustom", DbType="BigInt")] System.Nullable<long> receiveCustom, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ReceiveContact", DbType="BigInt")] System.Nullable<long> receiveContact, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ReceiveAddress", DbType="VarChar(5000)")] string receiveAddress, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ReceiveTime", DbType="DateTime")] System.Nullable<System.DateTime> receiveTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Item", DbType="BigInt")] System.Nullable<long> item, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Vehicle", DbType="BigInt")] System.Nullable<long> vehicle, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Outlet", DbType="BigInt")] System.Nullable<long> outlet, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Register", DbType="DateTime")] System.Nullable<System.DateTime> register, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="BigInt")] ref System.Nullable<long> iD)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), status, chargeType, charged, chargeAmount, orderCustom, orderAddress, orderTime, finishTime, receiveCustom, receiveContact, receiveAddress, receiveTime, item, vehicle, outlet, register, iD);
			iD = ((System.Nullable<long>)(result.GetParameterValue(16)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsertOrderChanged")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int InsertOrderChanged([global::System.Data.Linq.Mapping.ParameterAttribute(Name="OrderID", DbType="BigInt")] System.Nullable<long> orderID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="OrderStatus", DbType="SmallInt")] System.Nullable<short> orderStatus, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Vehicle", DbType="BigInt")] System.Nullable<long> vehicle, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ChangedTime", DbType="DateTime")] System.Nullable<System.DateTime> changedTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Outlet", DbType="BigInt")] System.Nullable<long> outlet, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="User", DbType="BigInt")] System.Nullable<long> user, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="BigInt")] ref System.Nullable<long> iD)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), orderID, orderStatus, vehicle, changedTime, outlet, user, iD);
			iD = ((System.Nullable<long>)(result.GetParameterValue(6)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsertOutlet")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int InsertOutlet([global::System.Data.Linq.Mapping.ParameterAttribute(Name="OutletID", DbType="BigInt")] System.Nullable<long> outletID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Status", DbType="SmallInt")] System.Nullable<short> status, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Phone", DbType="BigInt")] System.Nullable<long> phone, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Address", DbType="VarChar(3000)")] string address, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="BigInt")] ref System.Nullable<long> iD)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), outletID, status, phone, address, iD);
			iD = ((System.Nullable<long>)(result.GetParameterValue(4)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsertTag")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int InsertTag([global::System.Data.Linq.Mapping.ParameterAttribute(Name="EPC", DbType="VarChar(200)")] string ePC, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="BigInt")] ref System.Nullable<long> iD)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), ePC, iD);
			iD = ((System.Nullable<long>)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsertUser")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int InsertUser([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserName", DbType="VarChar(1000)")] string userName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserEmail", DbType="VarChar(1000)")] string userEmail, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserPassword", DbType="VarChar(1000)")] string userPassword, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserAdmin", DbType="Bit")] System.Nullable<bool> userAdmin, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserActivated", DbType="Bit")] System.Nullable<bool> userActivated, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="BigInt")] ref System.Nullable<long> iD)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userName, userEmail, userPassword, userAdmin, userActivated, iD);
			iD = ((System.Nullable<long>)(result.GetParameterValue(5)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsertVehicle")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int InsertVehicle([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Platenum", DbType="VarChar(100)")] string platenum, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Status", DbType="SmallInt")] System.Nullable<short> status, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Type", DbType="Decimal(18,0)")] System.Nullable<decimal> type, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Capacity", DbType="Float")] System.Nullable<double> capacity, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Name", DbType="VarChar(255)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Driver", DbType="BigInt")] System.Nullable<long> driver, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Address", DbType="VarChar(1000)")] string address, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Register", DbType="DateTime")] System.Nullable<System.DateTime> register, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="BigInt")] ref System.Nullable<long> iD)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), platenum, status, type, capacity, name, driver, address, register, iD);
			iD = ((System.Nullable<long>)(result.GetParameterValue(8)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InsertVehicleSchedule")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int InsertVehicleSchedule([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ScheduleID", DbType="BigInt")] System.Nullable<long> scheduleID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartTime", DbType="DateTime")] System.Nullable<System.DateTime> startTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EndTime", DbType="DateTime")] System.Nullable<System.DateTime> endTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Vehicle", DbType="BigInt")] System.Nullable<long> vehicle, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Driver", DbType="BigInt")] System.Nullable<long> driver, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="User", DbType="BigInt")] System.Nullable<long> user, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ID", DbType="BigInt")] ref System.Nullable<long> iD)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), scheduleID, startTime, endTime, vehicle, driver, user, iD);
			iD = ((System.Nullable<long>)(result.GetParameterValue(6)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdateBarcode")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int UpdateBarcode([global::System.Data.Linq.Mapping.ParameterAttribute(Name="BarcodeNumber", DbType="VarChar(200)")] string barcodeNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BarcodeID", DbType="BigInt")] System.Nullable<long> barcodeID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), barcodeNumber, barcodeID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdateCustom")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int UpdateCustom([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> register, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(255)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] System.Nullable<long> phone, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(3000)")] string password, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CustomID", DbType="BigInt")] System.Nullable<long> customID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), register, name, phone, password, customID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdateDriver")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int UpdateDriver([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Name", DbType="VarChar(255)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DriverNum", DbType="Int")] System.Nullable<int> driverNum, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="License", DbType="BigInt")] System.Nullable<long> license, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Sex", DbType="Bit")] System.Nullable<bool> sex, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Register", DbType="DateTime")] System.Nullable<System.DateTime> register, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DriverID", DbType="BigInt")] System.Nullable<long> driverID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), name, driverNum, license, sex, register, driverID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdateItem")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int UpdateItem([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItemName", DbType="VarChar(3000)")] string itemName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItemDescription", DbType="VarChar(3000)")] string itemDescription, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Status", DbType="SmallInt")] System.Nullable<short> status, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TagID", DbType="BigInt")] System.Nullable<long> tagID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BarcodeID", DbType="BigInt")] System.Nullable<long> barcodeID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItemSize", DbType="Float")] System.Nullable<double> itemSize, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItemWeight", DbType="Float")] System.Nullable<double> itemWeight, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItemNumeric", DbType="Int")] System.Nullable<int> itemNumeric, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ItemID", DbType="BigInt")] System.Nullable<long> itemID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itemName, itemDescription, status, tagID, barcodeID, itemSize, itemWeight, itemNumeric, itemID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdateOrder")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int UpdateOrder(
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Status", DbType="SmallInt")] System.Nullable<short> status, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ChargeType", DbType="SmallInt")] System.Nullable<short> chargeType, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Charged", DbType="Bit")] System.Nullable<bool> charged, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ChargeAmount", DbType="BigInt")] System.Nullable<long> chargeAmount, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="OrderCustom", DbType="BigInt")] System.Nullable<long> orderCustom, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="OrderAddress", DbType="VarChar(5000)")] string orderAddress, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="OrderTime", DbType="DateTime")] System.Nullable<System.DateTime> orderTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="FinishTime", DbType="DateTime")] System.Nullable<System.DateTime> finishTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ReceiveCustom", DbType="BigInt")] System.Nullable<long> receiveCustom, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ReceiveContact", DbType="BigInt")] System.Nullable<long> receiveContact, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ReceiveAddress", DbType="VarChar(5000)")] string receiveAddress, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ReceiveTime", DbType="DateTime")] System.Nullable<System.DateTime> receiveTime, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Item", DbType="BigInt")] System.Nullable<long> item, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Vehicle", DbType="BigInt")] System.Nullable<long> vehicle, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Outlet", DbType="BigInt")] System.Nullable<long> outlet, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Register", DbType="DateTime")] System.Nullable<System.DateTime> register, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(Name="OrderID", DbType="BigInt")] System.Nullable<long> orderID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), status, chargeType, charged, chargeAmount, orderCustom, orderAddress, orderTime, finishTime, receiveCustom, receiveContact, receiveAddress, receiveTime, item, vehicle, outlet, register, orderID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdateOrderChanged")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int UpdateOrderChanged([global::System.Data.Linq.Mapping.ParameterAttribute(Name="OrderID", DbType="BigInt")] System.Nullable<long> orderID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="OrderStatus", DbType="SmallInt")] System.Nullable<short> orderStatus, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Vehicle", DbType="BigInt")] System.Nullable<long> vehicle, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ChangedTime", DbType="DateTime")] System.Nullable<System.DateTime> changedTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Outlet", DbType="BigInt")] System.Nullable<long> outlet, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="User", DbType="BigInt")] System.Nullable<long> user)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), orderID, orderStatus, vehicle, changedTime, outlet, user);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdateOutlet")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int UpdateOutlet([global::System.Data.Linq.Mapping.ParameterAttribute(Name="OutletID", DbType="BigInt")] System.Nullable<long> outletID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Status", DbType="SmallInt")] System.Nullable<short> status, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Phone", DbType="BigInt")] System.Nullable<long> phone, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Address", DbType="VarChar(3000)")] string address)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), outletID, status, phone, address);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdateTag")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int UpdateTag([global::System.Data.Linq.Mapping.ParameterAttribute(Name="EPC", DbType="VarChar(200)")] string ePC, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TagID", DbType="BigInt")] System.Nullable<long> tagID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), ePC, tagID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdateUser")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int UpdateUser([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserName", DbType="VarChar(1000)")] string userName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserEmail", DbType="VarChar(1000)")] string userEmail, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserPassword", DbType="VarChar(1000)")] string userPassword, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserAdmin", DbType="Bit")] System.Nullable<bool> userAdmin, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserActivated", DbType="Bit")] System.Nullable<bool> userActivated, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserID", DbType="BigInt")] System.Nullable<long> userID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userName, userEmail, userPassword, userAdmin, userActivated, userID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdateVehicle")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int UpdateVehicle([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Platenum", DbType="VarChar(100)")] string platenum, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Status", DbType="SmallInt")] System.Nullable<short> status, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Type", DbType="Decimal(18,0)")] System.Nullable<decimal> type, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Capacity", DbType="Float")] System.Nullable<double> capacity, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Name", DbType="VarChar(255)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Driver", DbType="BigInt")] System.Nullable<long> driver, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Address", DbType="VarChar(1000)")] string address, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Register", DbType="DateTime")] System.Nullable<System.DateTime> register, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="VehicleID", DbType="BigInt")] System.Nullable<long> vehicleID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), platenum, status, type, capacity, name, driver, address, register, vehicleID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdateVehicleSchedule")]
		[return: global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")]
		public int UpdateVehicleSchedule([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ScheduleID", DbType="BigInt")] System.Nullable<long> scheduleID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StartTime", DbType="DateTime")] System.Nullable<System.DateTime> startTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EndTime", DbType="DateTime")] System.Nullable<System.DateTime> endTime, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Vehicle", DbType="BigInt")] System.Nullable<long> vehicle, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Driver", DbType="BigInt")] System.Nullable<long> driver, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="User", DbType="BigInt")] System.Nullable<long> user)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), scheduleID, startTime, endTime, vehicle, driver, user);
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Barcode")]
	public partial class Barcode : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _BarcodeID;
		
		private string _BarcodeNumber;
		
		private EntitySet<Item> _Item;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBarcodeIDChanging(long value);
    partial void OnBarcodeIDChanged();
    partial void OnBarcodeNumberChanging(string value);
    partial void OnBarcodeNumberChanged();
    #endregion
		
		public Barcode()
		{
			this._Item = new EntitySet<Item>(new Action<Item>(this.attach_Item), new Action<Item>(this.detach_Item));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BarcodeID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long BarcodeID
		{
			get
			{
				return this._BarcodeID;
			}
			set
			{
				if ((this._BarcodeID != value))
				{
					this.OnBarcodeIDChanging(value);
					this.SendPropertyChanging();
					this._BarcodeID = value;
					this.SendPropertyChanged("BarcodeID");
					this.OnBarcodeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BarcodeNumber", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string BarcodeNumber
		{
			get
			{
				return this._BarcodeNumber;
			}
			set
			{
				if ((this._BarcodeNumber != value))
				{
					this.OnBarcodeNumberChanging(value);
					this.SendPropertyChanging();
					this._BarcodeNumber = value;
					this.SendPropertyChanged("BarcodeNumber");
					this.OnBarcodeNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_BarcodeID", Storage="_Item", ThisKey="BarcodeID", OtherKey="BarcodeID", DeleteRule="NO ACTION")]
		public EntitySet<Item> Item
		{
			get
			{
				return this._Item;
			}
			set
			{
				this._Item.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Item(Item entity)
		{
			this.SendPropertyChanging();
			entity.Barcode = this;
		}
		
		private void detach_Item(Item entity)
		{
			this.SendPropertyChanging();
			entity.Barcode = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Custom")]
	public partial class Custom : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<System.DateTime> _Register;
		
		private long _CustomID;
		
		private string _Name;
		
		private System.Nullable<long> _Phone;
		
		private string _Password;
		
		private EntitySet<Order> _Order;
		
		private EntitySet<Order> _Custom_Receive;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRegisterChanging(System.Nullable<System.DateTime> value);
    partial void OnRegisterChanged();
    partial void OnCustomIDChanging(long value);
    partial void OnCustomIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPhoneChanging(System.Nullable<long> value);
    partial void OnPhoneChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    #endregion
		
		public Custom()
		{
			this._Order = new EntitySet<Order>(new Action<Order>(this.attach_Order), new Action<Order>(this.detach_Order));
			this._Custom_Receive = new EntitySet<Order>(new Action<Order>(this.attach_Custom_Receive), new Action<Order>(this.detach_Custom_Receive));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="register", Storage="_Register", DbType="DateTime")]
		public System.Nullable<System.DateTime> Register
		{
			get
			{
				return this._Register;
			}
			set
			{
				if ((this._Register != value))
				{
					this.OnRegisterChanging(value);
					this.SendPropertyChanging();
					this._Register = value;
					this.SendPropertyChanged("Register");
					this.OnRegisterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long CustomID
		{
			get
			{
				return this._CustomID;
			}
			set
			{
				if ((this._CustomID != value))
				{
					this.OnCustomIDChanging(value);
					this.SendPropertyChanging();
					this._CustomID = value;
					this.SendPropertyChanged("CustomID");
					this.OnCustomIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="name", Storage="_Name", DbType="VarChar(255)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="phone", Storage="_Phone", DbType="BigInt")]
		public System.Nullable<long> Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="password", Storage="_Password", DbType="VarChar(3000)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Custom_Order", Storage="_Order", ThisKey="CustomID", OtherKey="OrderCustom", DeleteRule="NO ACTION")]
		public EntitySet<Order> Order
		{
			get
			{
				return this._Order;
			}
			set
			{
				this._Order.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Storage="_Custom_Receive", ThisKey="CustomID", OtherKey="ReceiveCustom", DeleteRule="NO ACTION")]
		public EntitySet<Order> Custom_Receive
		{
			get
			{
				return this._Custom_Receive;
			}
			set
			{
				this._Custom_Receive.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Order(Order entity)
		{
			this.SendPropertyChanging();
			entity.Custom = this;
		}
		
		private void detach_Order(Order entity)
		{
			this.SendPropertyChanging();
			entity.Custom = null;
		}
		
		private void attach_Custom_Receive(Order entity)
		{
			this.SendPropertyChanging();
			entity.ReceiveCustomCustom = this;
		}
		
		private void detach_Custom_Receive(Order entity)
		{
			this.SendPropertyChanging();
			entity.ReceiveCustomCustom = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Driver")]
	public partial class Driver : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _DriverID;
		
		private string _Name;
		
		private int _DriverNum;
		
		private System.Nullable<long> _License;
		
		private System.Nullable<bool> _Sex;
		
		private System.Nullable<System.DateTime> _Register;
		
		private EntitySet<Vehicle> _Vehicle;
		
		private EntitySet<VehicleSchedule> _VehicleSchedule;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDriverIDChanging(long value);
    partial void OnDriverIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDriverNumChanging(int value);
    partial void OnDriverNumChanged();
    partial void OnLicenseChanging(System.Nullable<long> value);
    partial void OnLicenseChanged();
    partial void OnSexChanging(System.Nullable<bool> value);
    partial void OnSexChanged();
    partial void OnRegisterChanging(System.Nullable<System.DateTime> value);
    partial void OnRegisterChanged();
    #endregion
		
		public Driver()
		{
			this._Vehicle = new EntitySet<Vehicle>(new Action<Vehicle>(this.attach_Vehicle), new Action<Vehicle>(this.detach_Vehicle));
			this._VehicleSchedule = new EntitySet<VehicleSchedule>(new Action<VehicleSchedule>(this.attach_VehicleSchedule), new Action<VehicleSchedule>(this.detach_VehicleSchedule));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DriverID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long DriverID
		{
			get
			{
				return this._DriverID;
			}
			set
			{
				if ((this._DriverID != value))
				{
					this.OnDriverIDChanging(value);
					this.SendPropertyChanging();
					this._DriverID = value;
					this.SendPropertyChanged("DriverID");
					this.OnDriverIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(255)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DriverNum", DbType="Int NOT NULL")]
		public int DriverNum
		{
			get
			{
				return this._DriverNum;
			}
			set
			{
				if ((this._DriverNum != value))
				{
					this.OnDriverNumChanging(value);
					this.SendPropertyChanging();
					this._DriverNum = value;
					this.SendPropertyChanged("DriverNum");
					this.OnDriverNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_License", DbType="BigInt")]
		public System.Nullable<long> License
		{
			get
			{
				return this._License;
			}
			set
			{
				if ((this._License != value))
				{
					this.OnLicenseChanging(value);
					this.SendPropertyChanging();
					this._License = value;
					this.SendPropertyChanged("License");
					this.OnLicenseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sex", DbType="Bit")]
		public System.Nullable<bool> Sex
		{
			get
			{
				return this._Sex;
			}
			set
			{
				if ((this._Sex != value))
				{
					this.OnSexChanging(value);
					this.SendPropertyChanging();
					this._Sex = value;
					this.SendPropertyChanged("Sex");
					this.OnSexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Register", DbType="DateTime")]
		public System.Nullable<System.DateTime> Register
		{
			get
			{
				return this._Register;
			}
			set
			{
				if ((this._Register != value))
				{
					this.OnRegisterChanging(value);
					this.SendPropertyChanging();
					this._Register = value;
					this.SendPropertyChanged("Register");
					this.OnRegisterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Driver1", Storage="_Vehicle", ThisKey="DriverID", OtherKey="Driver", DeleteRule="NO ACTION")]
		public EntitySet<Vehicle> Vehicle
		{
			get
			{
				return this._Vehicle;
			}
			set
			{
				this._Vehicle.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Driver2", Storage="_VehicleSchedule", ThisKey="DriverID", OtherKey="Driver", DeleteRule="NO ACTION")]
		public EntitySet<VehicleSchedule> VehicleSchedule
		{
			get
			{
				return this._VehicleSchedule;
			}
			set
			{
				this._VehicleSchedule.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Vehicle(Vehicle entity)
		{
			this.SendPropertyChanging();
			entity.DriverDriver = this;
		}
		
		private void detach_Vehicle(Vehicle entity)
		{
			this.SendPropertyChanging();
			entity.DriverDriver = null;
		}
		
		private void attach_VehicleSchedule(VehicleSchedule entity)
		{
			this.SendPropertyChanging();
			entity.DriverDriver = this;
		}
		
		private void detach_VehicleSchedule(VehicleSchedule entity)
		{
			this.SendPropertyChanging();
			entity.DriverDriver = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Item")]
	public partial class Item : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ItemID;
		
		private string _ItemName;
		
		private string _ItemDescription;
		
		private short _Status;
		
		private long _TagID;
		
		private long _BarcodeID;
		
		private System.Nullable<double> _ItemSize;
		
		private System.Nullable<double> _ItemWeight;
		
		private System.Nullable<int> _ItemNumeric;
		
		private EntityRef<Barcode> _Barcode;
		
		private EntitySet<Order> _Order;
		
		private EntityRef<Tag> _Tag;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItemIDChanging(long value);
    partial void OnItemIDChanged();
    partial void OnItemNameChanging(string value);
    partial void OnItemNameChanged();
    partial void OnItemDescriptionChanging(string value);
    partial void OnItemDescriptionChanged();
    partial void OnStatusChanging(short value);
    partial void OnStatusChanged();
    partial void OnTagIDChanging(long value);
    partial void OnTagIDChanged();
    partial void OnBarcodeIDChanging(long value);
    partial void OnBarcodeIDChanged();
    partial void OnItemSizeChanging(System.Nullable<double> value);
    partial void OnItemSizeChanged();
    partial void OnItemWeightChanging(System.Nullable<double> value);
    partial void OnItemWeightChanged();
    partial void OnItemNumericChanging(System.Nullable<int> value);
    partial void OnItemNumericChanged();
    #endregion
		
		public Item()
		{
			this._Barcode = default(EntityRef<Barcode>);
			this._Order = new EntitySet<Order>(new Action<Order>(this.attach_Order), new Action<Order>(this.detach_Order));
			this._Tag = default(EntityRef<Tag>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ItemID
		{
			get
			{
				return this._ItemID;
			}
			set
			{
				if ((this._ItemID != value))
				{
					this.OnItemIDChanging(value);
					this.SendPropertyChanging();
					this._ItemID = value;
					this.SendPropertyChanged("ItemID");
					this.OnItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemName", DbType="VarChar(3000) NOT NULL", CanBeNull=false)]
		public string ItemName
		{
			get
			{
				return this._ItemName;
			}
			set
			{
				if ((this._ItemName != value))
				{
					this.OnItemNameChanging(value);
					this.SendPropertyChanging();
					this._ItemName = value;
					this.SendPropertyChanged("ItemName");
					this.OnItemNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemDescription", DbType="VarChar(3000) NOT NULL", CanBeNull=false)]
		public string ItemDescription
		{
			get
			{
				return this._ItemDescription;
			}
			set
			{
				if ((this._ItemDescription != value))
				{
					this.OnItemDescriptionChanging(value);
					this.SendPropertyChanging();
					this._ItemDescription = value;
					this.SendPropertyChanged("ItemDescription");
					this.OnItemDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="SmallInt NOT NULL")]
		public short Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TagID", DbType="BigInt NOT NULL")]
		public long TagID
		{
			get
			{
				return this._TagID;
			}
			set
			{
				if ((this._TagID != value))
				{
					if (this._Tag.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTagIDChanging(value);
					this.SendPropertyChanging();
					this._TagID = value;
					this.SendPropertyChanged("TagID");
					this.OnTagIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BarcodeID", DbType="BigInt NOT NULL")]
		public long BarcodeID
		{
			get
			{
				return this._BarcodeID;
			}
			set
			{
				if ((this._BarcodeID != value))
				{
					if (this._Barcode.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBarcodeIDChanging(value);
					this.SendPropertyChanging();
					this._BarcodeID = value;
					this.SendPropertyChanged("BarcodeID");
					this.OnBarcodeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemSize", DbType="Float")]
		public System.Nullable<double> ItemSize
		{
			get
			{
				return this._ItemSize;
			}
			set
			{
				if ((this._ItemSize != value))
				{
					this.OnItemSizeChanging(value);
					this.SendPropertyChanging();
					this._ItemSize = value;
					this.SendPropertyChanged("ItemSize");
					this.OnItemSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemWeight", DbType="Float")]
		public System.Nullable<double> ItemWeight
		{
			get
			{
				return this._ItemWeight;
			}
			set
			{
				if ((this._ItemWeight != value))
				{
					this.OnItemWeightChanging(value);
					this.SendPropertyChanging();
					this._ItemWeight = value;
					this.SendPropertyChanged("ItemWeight");
					this.OnItemWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemNumeric", DbType="Int")]
		public System.Nullable<int> ItemNumeric
		{
			get
			{
				return this._ItemNumeric;
			}
			set
			{
				if ((this._ItemNumeric != value))
				{
					this.OnItemNumericChanging(value);
					this.SendPropertyChanging();
					this._ItemNumeric = value;
					this.SendPropertyChanged("ItemNumeric");
					this.OnItemNumericChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_BarcodeID", Storage="_Barcode", ThisKey="BarcodeID", OtherKey="BarcodeID", IsForeignKey=true)]
		public Barcode Barcode
		{
			get
			{
				return this._Barcode.Entity;
			}
			set
			{
				Barcode previousValue = this._Barcode.Entity;
				if (((previousValue != value) 
							|| (this._Barcode.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Barcode.Entity = null;
						previousValue.Item.Remove(this);
					}
					this._Barcode.Entity = value;
					if ((value != null))
					{
						value.Item.Add(this);
						this._BarcodeID = value.BarcodeID;
					}
					else
					{
						this._BarcodeID = default(long);
					}
					this.SendPropertyChanged("Barcode");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Item", Storage="_Order", ThisKey="ItemID", OtherKey="Item", DeleteRule="NO ACTION")]
		public EntitySet<Order> Order
		{
			get
			{
				return this._Order;
			}
			set
			{
				this._Order.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_TagID", Storage="_Tag", ThisKey="TagID", OtherKey="TagID", IsForeignKey=true)]
		public Tag Tag
		{
			get
			{
				return this._Tag.Entity;
			}
			set
			{
				Tag previousValue = this._Tag.Entity;
				if (((previousValue != value) 
							|| (this._Tag.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tag.Entity = null;
						previousValue.Item.Remove(this);
					}
					this._Tag.Entity = value;
					if ((value != null))
					{
						value.Item.Add(this);
						this._TagID = value.TagID;
					}
					else
					{
						this._TagID = default(long);
					}
					this.SendPropertyChanged("Tag");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Order(Order entity)
		{
			this.SendPropertyChanging();
			entity.ItemItem = this;
		}
		
		private void detach_Order(Order entity)
		{
			this.SendPropertyChanging();
			entity.ItemItem = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Order")]
	public partial class Order : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _OrderID;
		
		private short _Status;
		
		private short _ChargeType;
		
		private bool _Charged;
		
		private System.Nullable<long> _ChargeAmount;
		
		private System.Nullable<long> _OrderCustom;
		
		private string _OrderAddress;
		
		private System.Nullable<System.DateTime> _OrderTime;
		
		private System.Nullable<System.DateTime> _FinishTime;
		
		private System.Nullable<long> _ReceiveCustom;
		
		private System.Nullable<long> _ReceiveContact;
		
		private string _ReceiveAddress;
		
		private System.Nullable<System.DateTime> _ReceiveTime;
		
		private System.Nullable<long> _Item;
		
		private System.Nullable<long> _Vehicle;
		
		private System.Nullable<long> _Outlet;
		
		private System.Nullable<System.DateTime> _Register;
		
		private EntityRef<Custom> _Custom;
		
		private EntityRef<Custom> _ReceiveCustomCustom;
		
		private EntityRef<Item> _ItemItem;
		
		private EntityRef<Outlet> _OutletOutlet;
		
		private EntityRef<Vehicle> _VehicleVehicle;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrderIDChanging(long value);
    partial void OnOrderIDChanged();
    partial void OnStatusChanging(short value);
    partial void OnStatusChanged();
    partial void OnChargeTypeChanging(short value);
    partial void OnChargeTypeChanged();
    partial void OnChargedChanging(bool value);
    partial void OnChargedChanged();
    partial void OnChargeAmountChanging(System.Nullable<long> value);
    partial void OnChargeAmountChanged();
    partial void OnOrderCustomChanging(System.Nullable<long> value);
    partial void OnOrderCustomChanged();
    partial void OnOrderAddressChanging(string value);
    partial void OnOrderAddressChanged();
    partial void OnOrderTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnOrderTimeChanged();
    partial void OnFinishTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnFinishTimeChanged();
    partial void OnReceiveCustomChanging(System.Nullable<long> value);
    partial void OnReceiveCustomChanged();
    partial void OnReceiveContactChanging(System.Nullable<long> value);
    partial void OnReceiveContactChanged();
    partial void OnReceiveAddressChanging(string value);
    partial void OnReceiveAddressChanged();
    partial void OnReceiveTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnReceiveTimeChanged();
    partial void OnItemChanging(System.Nullable<long> value);
    partial void OnItemChanged();
    partial void OnVehicleChanging(System.Nullable<long> value);
    partial void OnVehicleChanged();
    partial void OnOutletChanging(System.Nullable<long> value);
    partial void OnOutletChanged();
    partial void OnRegisterChanging(System.Nullable<System.DateTime> value);
    partial void OnRegisterChanged();
    #endregion
		
		public Order()
		{
			this._Custom = default(EntityRef<Custom>);
			this._ReceiveCustomCustom = default(EntityRef<Custom>);
			this._ItemItem = default(EntityRef<Item>);
			this._OutletOutlet = default(EntityRef<Outlet>);
			this._VehicleVehicle = default(EntityRef<Vehicle>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					this.OnOrderIDChanging(value);
					this.SendPropertyChanging();
					this._OrderID = value;
					this.SendPropertyChanged("OrderID");
					this.OnOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="SmallInt NOT NULL")]
		public short Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChargeType", DbType="SmallInt NOT NULL")]
		public short ChargeType
		{
			get
			{
				return this._ChargeType;
			}
			set
			{
				if ((this._ChargeType != value))
				{
					this.OnChargeTypeChanging(value);
					this.SendPropertyChanging();
					this._ChargeType = value;
					this.SendPropertyChanged("ChargeType");
					this.OnChargeTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Charged", DbType="Bit NOT NULL")]
		public bool Charged
		{
			get
			{
				return this._Charged;
			}
			set
			{
				if ((this._Charged != value))
				{
					this.OnChargedChanging(value);
					this.SendPropertyChanging();
					this._Charged = value;
					this.SendPropertyChanged("Charged");
					this.OnChargedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChargeAmount", DbType="BigInt")]
		public System.Nullable<long> ChargeAmount
		{
			get
			{
				return this._ChargeAmount;
			}
			set
			{
				if ((this._ChargeAmount != value))
				{
					this.OnChargeAmountChanging(value);
					this.SendPropertyChanging();
					this._ChargeAmount = value;
					this.SendPropertyChanged("ChargeAmount");
					this.OnChargeAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderCustom", DbType="BigInt")]
		public System.Nullable<long> OrderCustom
		{
			get
			{
				return this._OrderCustom;
			}
			set
			{
				if ((this._OrderCustom != value))
				{
					if (this._Custom.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderCustomChanging(value);
					this.SendPropertyChanging();
					this._OrderCustom = value;
					this.SendPropertyChanged("OrderCustom");
					this.OnOrderCustomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderAddress", DbType="VarChar(5000)")]
		public string OrderAddress
		{
			get
			{
				return this._OrderAddress;
			}
			set
			{
				if ((this._OrderAddress != value))
				{
					this.OnOrderAddressChanging(value);
					this.SendPropertyChanging();
					this._OrderAddress = value;
					this.SendPropertyChanged("OrderAddress");
					this.OnOrderAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> OrderTime
		{
			get
			{
				return this._OrderTime;
			}
			set
			{
				if ((this._OrderTime != value))
				{
					this.OnOrderTimeChanging(value);
					this.SendPropertyChanging();
					this._OrderTime = value;
					this.SendPropertyChanged("OrderTime");
					this.OnOrderTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinishTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> FinishTime
		{
			get
			{
				return this._FinishTime;
			}
			set
			{
				if ((this._FinishTime != value))
				{
					this.OnFinishTimeChanging(value);
					this.SendPropertyChanging();
					this._FinishTime = value;
					this.SendPropertyChanged("FinishTime");
					this.OnFinishTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiveCustom", DbType="BigInt")]
		public System.Nullable<long> ReceiveCustom
		{
			get
			{
				return this._ReceiveCustom;
			}
			set
			{
				if ((this._ReceiveCustom != value))
				{
					if (this._ReceiveCustomCustom.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnReceiveCustomChanging(value);
					this.SendPropertyChanging();
					this._ReceiveCustom = value;
					this.SendPropertyChanged("ReceiveCustom");
					this.OnReceiveCustomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiveContact", DbType="BigInt")]
		public System.Nullable<long> ReceiveContact
		{
			get
			{
				return this._ReceiveContact;
			}
			set
			{
				if ((this._ReceiveContact != value))
				{
					this.OnReceiveContactChanging(value);
					this.SendPropertyChanging();
					this._ReceiveContact = value;
					this.SendPropertyChanged("ReceiveContact");
					this.OnReceiveContactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiveAddress", DbType="VarChar(5000)")]
		public string ReceiveAddress
		{
			get
			{
				return this._ReceiveAddress;
			}
			set
			{
				if ((this._ReceiveAddress != value))
				{
					this.OnReceiveAddressChanging(value);
					this.SendPropertyChanging();
					this._ReceiveAddress = value;
					this.SendPropertyChanged("ReceiveAddress");
					this.OnReceiveAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiveTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ReceiveTime
		{
			get
			{
				return this._ReceiveTime;
			}
			set
			{
				if ((this._ReceiveTime != value))
				{
					this.OnReceiveTimeChanging(value);
					this.SendPropertyChanging();
					this._ReceiveTime = value;
					this.SendPropertyChanged("ReceiveTime");
					this.OnReceiveTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Item", DbType="BigInt")]
		public System.Nullable<long> Item
		{
			get
			{
				return this._Item;
			}
			set
			{
				if ((this._Item != value))
				{
					if (this._ItemItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemChanging(value);
					this.SendPropertyChanging();
					this._Item = value;
					this.SendPropertyChanged("Item");
					this.OnItemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vehicle", DbType="BigInt")]
		public System.Nullable<long> Vehicle
		{
			get
			{
				return this._Vehicle;
			}
			set
			{
				if ((this._Vehicle != value))
				{
					if (this._VehicleVehicle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVehicleChanging(value);
					this.SendPropertyChanging();
					this._Vehicle = value;
					this.SendPropertyChanged("Vehicle");
					this.OnVehicleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Outlet", DbType="BigInt")]
		public System.Nullable<long> Outlet
		{
			get
			{
				return this._Outlet;
			}
			set
			{
				if ((this._Outlet != value))
				{
					if (this._OutletOutlet.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOutletChanging(value);
					this.SendPropertyChanging();
					this._Outlet = value;
					this.SendPropertyChanged("Outlet");
					this.OnOutletChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Register", DbType="DateTime")]
		public System.Nullable<System.DateTime> Register
		{
			get
			{
				return this._Register;
			}
			set
			{
				if ((this._Register != value))
				{
					this.OnRegisterChanging(value);
					this.SendPropertyChanging();
					this._Register = value;
					this.SendPropertyChanged("Register");
					this.OnRegisterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Custom_Order", Storage="_Custom", ThisKey="OrderCustom", OtherKey="CustomID", IsForeignKey=true)]
		public Custom Custom
		{
			get
			{
				return this._Custom.Entity;
			}
			set
			{
				Custom previousValue = this._Custom.Entity;
				if (((previousValue != value) 
							|| (this._Custom.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Custom.Entity = null;
						previousValue.Order.Remove(this);
					}
					this._Custom.Entity = value;
					if ((value != null))
					{
						value.Order.Add(this);
						this._OrderCustom = value.CustomID;
					}
					else
					{
						this._OrderCustom = default(Nullable<long>);
					}
					this.SendPropertyChanged("Custom");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Custom_Receive", Storage="_ReceiveCustomCustom", ThisKey="ReceiveCustom", OtherKey="CustomID", IsForeignKey=true)]
		public Custom ReceiveCustomCustom
		{
			get
			{
				return this._ReceiveCustomCustom.Entity;
			}
			set
			{
				Custom previousValue = this._ReceiveCustomCustom.Entity;
				if (((previousValue != value) 
							|| (this._ReceiveCustomCustom.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ReceiveCustomCustom.Entity = null;
						previousValue.Custom_Receive.Remove(this);
					}
					this._ReceiveCustomCustom.Entity = value;
					if ((value != null))
					{
						value.Custom_Receive.Add(this);
						this._ReceiveCustom = value.CustomID;
					}
					else
					{
						this._ReceiveCustom = default(Nullable<long>);
					}
					this.SendPropertyChanged("ReceiveCustomCustom");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Item", Storage="_ItemItem", ThisKey="Item", OtherKey="ItemID", IsForeignKey=true)]
		public Item ItemItem
		{
			get
			{
				return this._ItemItem.Entity;
			}
			set
			{
				Item previousValue = this._ItemItem.Entity;
				if (((previousValue != value) 
							|| (this._ItemItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ItemItem.Entity = null;
						previousValue.Order.Remove(this);
					}
					this._ItemItem.Entity = value;
					if ((value != null))
					{
						value.Order.Add(this);
						this._Item = value.ItemID;
					}
					else
					{
						this._Item = default(Nullable<long>);
					}
					this.SendPropertyChanged("ItemItem");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_OrderOutlet", Storage="_OutletOutlet", ThisKey="Outlet", OtherKey="OutletID", IsForeignKey=true)]
		public Outlet OutletOutlet
		{
			get
			{
				return this._OutletOutlet.Entity;
			}
			set
			{
				Outlet previousValue = this._OutletOutlet.Entity;
				if (((previousValue != value) 
							|| (this._OutletOutlet.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OutletOutlet.Entity = null;
						previousValue.Order.Remove(this);
					}
					this._OutletOutlet.Entity = value;
					if ((value != null))
					{
						value.Order.Add(this);
						this._Outlet = value.OutletID;
					}
					else
					{
						this._Outlet = default(Nullable<long>);
					}
					this.SendPropertyChanged("OutletOutlet");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_OrderVehicle", Storage="_VehicleVehicle", ThisKey="Vehicle", OtherKey="VehicleID", IsForeignKey=true)]
		public Vehicle VehicleVehicle
		{
			get
			{
				return this._VehicleVehicle.Entity;
			}
			set
			{
				Vehicle previousValue = this._VehicleVehicle.Entity;
				if (((previousValue != value) 
							|| (this._VehicleVehicle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VehicleVehicle.Entity = null;
						previousValue.Order.Remove(this);
					}
					this._VehicleVehicle.Entity = value;
					if ((value != null))
					{
						value.Order.Add(this);
						this._Vehicle = value.VehicleID;
					}
					else
					{
						this._Vehicle = default(Nullable<long>);
					}
					this.SendPropertyChanged("VehicleVehicle");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderChanged")]
	public partial class OrderChanged : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _OrderID;
		
		private short _OrderStatus;
		
		private System.Nullable<long> _Vehicle;
		
		private System.Nullable<System.DateTime> _ChangedTime;
		
		private System.Nullable<long> _Outlet;
		
		private System.Nullable<long> _User;
		
		private EntityRef<Outlet> _OutletOutlet;
		
		private EntityRef<User> _UserUser;
		
		private EntityRef<Vehicle> _VehicleVehicle;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrderIDChanging(long value);
    partial void OnOrderIDChanged();
    partial void OnOrderStatusChanging(short value);
    partial void OnOrderStatusChanged();
    partial void OnVehicleChanging(System.Nullable<long> value);
    partial void OnVehicleChanged();
    partial void OnChangedTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnChangedTimeChanged();
    partial void OnOutletChanging(System.Nullable<long> value);
    partial void OnOutletChanged();
    partial void OnUserChanging(System.Nullable<long> value);
    partial void OnUserChanged();
    #endregion
		
		public OrderChanged()
		{
			this._OutletOutlet = default(EntityRef<Outlet>);
			this._UserUser = default(EntityRef<User>);
			this._VehicleVehicle = default(EntityRef<Vehicle>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					this.OnOrderIDChanging(value);
					this.SendPropertyChanging();
					this._OrderID = value;
					this.SendPropertyChanged("OrderID");
					this.OnOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderStatus", DbType="SmallInt NOT NULL")]
		public short OrderStatus
		{
			get
			{
				return this._OrderStatus;
			}
			set
			{
				if ((this._OrderStatus != value))
				{
					this.OnOrderStatusChanging(value);
					this.SendPropertyChanging();
					this._OrderStatus = value;
					this.SendPropertyChanged("OrderStatus");
					this.OnOrderStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vehicle", DbType="BigInt")]
		public System.Nullable<long> Vehicle
		{
			get
			{
				return this._Vehicle;
			}
			set
			{
				if ((this._Vehicle != value))
				{
					if (this._VehicleVehicle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVehicleChanging(value);
					this.SendPropertyChanging();
					this._Vehicle = value;
					this.SendPropertyChanged("Vehicle");
					this.OnVehicleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ChangedTime
		{
			get
			{
				return this._ChangedTime;
			}
			set
			{
				if ((this._ChangedTime != value))
				{
					this.OnChangedTimeChanging(value);
					this.SendPropertyChanging();
					this._ChangedTime = value;
					this.SendPropertyChanged("ChangedTime");
					this.OnChangedTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Outlet", DbType="BigInt")]
		public System.Nullable<long> Outlet
		{
			get
			{
				return this._Outlet;
			}
			set
			{
				if ((this._Outlet != value))
				{
					if (this._OutletOutlet.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOutletChanging(value);
					this.SendPropertyChanging();
					this._Outlet = value;
					this.SendPropertyChanged("Outlet");
					this.OnOutletChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User", DbType="BigInt")]
		public System.Nullable<long> User
		{
			get
			{
				return this._User;
			}
			set
			{
				if ((this._User != value))
				{
					if (this._UserUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserChanging(value);
					this.SendPropertyChanging();
					this._User = value;
					this.SendPropertyChanged("User");
					this.OnUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Outlet", Storage="_OutletOutlet", ThisKey="Outlet", OtherKey="OutletID", IsForeignKey=true)]
		public Outlet OutletOutlet
		{
			get
			{
				return this._OutletOutlet.Entity;
			}
			set
			{
				Outlet previousValue = this._OutletOutlet.Entity;
				if (((previousValue != value) 
							|| (this._OutletOutlet.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OutletOutlet.Entity = null;
						previousValue.OrderChanged.Remove(this);
					}
					this._OutletOutlet.Entity = value;
					if ((value != null))
					{
						value.OrderChanged.Add(this);
						this._Outlet = value.OutletID;
					}
					else
					{
						this._Outlet = default(Nullable<long>);
					}
					this.SendPropertyChanged("OutletOutlet");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_User", Storage="_UserUser", ThisKey="User", OtherKey="UserID", IsForeignKey=true)]
		public User UserUser
		{
			get
			{
				return this._UserUser.Entity;
			}
			set
			{
				User previousValue = this._UserUser.Entity;
				if (((previousValue != value) 
							|| (this._UserUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserUser.Entity = null;
						previousValue.OrderChanged.Remove(this);
					}
					this._UserUser.Entity = value;
					if ((value != null))
					{
						value.OrderChanged.Add(this);
						this._User = value.UserID;
					}
					else
					{
						this._User = default(Nullable<long>);
					}
					this.SendPropertyChanged("UserUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Vehicle", Storage="_VehicleVehicle", ThisKey="Vehicle", OtherKey="VehicleID", IsForeignKey=true)]
		public Vehicle VehicleVehicle
		{
			get
			{
				return this._VehicleVehicle.Entity;
			}
			set
			{
				Vehicle previousValue = this._VehicleVehicle.Entity;
				if (((previousValue != value) 
							|| (this._VehicleVehicle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VehicleVehicle.Entity = null;
						previousValue.OrderChanged.Remove(this);
					}
					this._VehicleVehicle.Entity = value;
					if ((value != null))
					{
						value.OrderChanged.Add(this);
						this._Vehicle = value.VehicleID;
					}
					else
					{
						this._Vehicle = default(Nullable<long>);
					}
					this.SendPropertyChanged("VehicleVehicle");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Outlet")]
	public partial class Outlet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _OutletID;
		
		private short _Status;
		
		private System.Nullable<long> _Phone;
		
		private string _Address;
		
		private EntitySet<Order> _Order;
		
		private EntitySet<OrderChanged> _OrderChanged;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOutletIDChanging(long value);
    partial void OnOutletIDChanged();
    partial void OnStatusChanging(short value);
    partial void OnStatusChanged();
    partial void OnPhoneChanging(System.Nullable<long> value);
    partial void OnPhoneChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    #endregion
		
		public Outlet()
		{
			this._Order = new EntitySet<Order>(new Action<Order>(this.attach_Order), new Action<Order>(this.detach_Order));
			this._OrderChanged = new EntitySet<OrderChanged>(new Action<OrderChanged>(this.attach_OrderChanged), new Action<OrderChanged>(this.detach_OrderChanged));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutletID", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long OutletID
		{
			get
			{
				return this._OutletID;
			}
			set
			{
				if ((this._OutletID != value))
				{
					this.OnOutletIDChanging(value);
					this.SendPropertyChanging();
					this._OutletID = value;
					this.SendPropertyChanged("OutletID");
					this.OnOutletIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="SmallInt NOT NULL")]
		public short Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="BigInt")]
		public System.Nullable<long> Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(3000)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_OrderOutlet", Storage="_Order", ThisKey="OutletID", OtherKey="Outlet", DeleteRule="NO ACTION")]
		public EntitySet<Order> Order
		{
			get
			{
				return this._Order;
			}
			set
			{
				this._Order.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Outlet", Storage="_OrderChanged", ThisKey="OutletID", OtherKey="Outlet", DeleteRule="NO ACTION")]
		public EntitySet<OrderChanged> OrderChanged
		{
			get
			{
				return this._OrderChanged;
			}
			set
			{
				this._OrderChanged.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Order(Order entity)
		{
			this.SendPropertyChanging();
			entity.OutletOutlet = this;
		}
		
		private void detach_Order(Order entity)
		{
			this.SendPropertyChanging();
			entity.OutletOutlet = null;
		}
		
		private void attach_OrderChanged(OrderChanged entity)
		{
			this.SendPropertyChanging();
			entity.OutletOutlet = this;
		}
		
		private void detach_OrderChanged(OrderChanged entity)
		{
			this.SendPropertyChanging();
			entity.OutletOutlet = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tag")]
	public partial class Tag : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _TagID;
		
		private string _EPC;
		
		private EntitySet<Item> _Item;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTagIDChanging(long value);
    partial void OnTagIDChanged();
    partial void OnEPCChanging(string value);
    partial void OnEPCChanged();
    #endregion
		
		public Tag()
		{
			this._Item = new EntitySet<Item>(new Action<Item>(this.attach_Item), new Action<Item>(this.detach_Item));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TagID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long TagID
		{
			get
			{
				return this._TagID;
			}
			set
			{
				if ((this._TagID != value))
				{
					this.OnTagIDChanging(value);
					this.SendPropertyChanging();
					this._TagID = value;
					this.SendPropertyChanged("TagID");
					this.OnTagIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EPC", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string EPC
		{
			get
			{
				return this._EPC;
			}
			set
			{
				if ((this._EPC != value))
				{
					this.OnEPCChanging(value);
					this.SendPropertyChanging();
					this._EPC = value;
					this.SendPropertyChanged("EPC");
					this.OnEPCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_TagID", Storage="_Item", ThisKey="TagID", OtherKey="TagID", DeleteRule="NO ACTION")]
		public EntitySet<Item> Item
		{
			get
			{
				return this._Item;
			}
			set
			{
				this._Item.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Item(Item entity)
		{
			this.SendPropertyChanging();
			entity.Tag = this;
		}
		
		private void detach_Item(Item entity)
		{
			this.SendPropertyChanging();
			entity.Tag = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.User")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _UserID;
		
		private string _UserName;
		
		private string _UserEmail;
		
		private string _UserPassword;
		
		private bool _UserAdmin;
		
		private bool _UserActivated;
		
		private EntitySet<OrderChanged> _OrderChanged;
		
		private EntitySet<VehicleSchedule> _VehicleSchedule;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(long value);
    partial void OnUserIDChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnUserEmailChanging(string value);
    partial void OnUserEmailChanged();
    partial void OnUserPasswordChanging(string value);
    partial void OnUserPasswordChanged();
    partial void OnUserAdminChanging(bool value);
    partial void OnUserAdminChanged();
    partial void OnUserActivatedChanging(bool value);
    partial void OnUserActivatedChanged();
    #endregion
		
		public User()
		{
			this._OrderChanged = new EntitySet<OrderChanged>(new Action<OrderChanged>(this.attach_OrderChanged), new Action<OrderChanged>(this.detach_OrderChanged));
			this._VehicleSchedule = new EntitySet<VehicleSchedule>(new Action<VehicleSchedule>(this.attach_VehicleSchedule), new Action<VehicleSchedule>(this.detach_VehicleSchedule));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(1000) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserEmail", DbType="VarChar(1000) NOT NULL", CanBeNull=false)]
		public string UserEmail
		{
			get
			{
				return this._UserEmail;
			}
			set
			{
				if ((this._UserEmail != value))
				{
					this.OnUserEmailChanging(value);
					this.SendPropertyChanging();
					this._UserEmail = value;
					this.SendPropertyChanged("UserEmail");
					this.OnUserEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserPassword", DbType="VarChar(1000) NOT NULL", CanBeNull=false)]
		public string UserPassword
		{
			get
			{
				return this._UserPassword;
			}
			set
			{
				if ((this._UserPassword != value))
				{
					this.OnUserPasswordChanging(value);
					this.SendPropertyChanging();
					this._UserPassword = value;
					this.SendPropertyChanged("UserPassword");
					this.OnUserPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAdmin", DbType="Bit NOT NULL")]
		public bool UserAdmin
		{
			get
			{
				return this._UserAdmin;
			}
			set
			{
				if ((this._UserAdmin != value))
				{
					this.OnUserAdminChanging(value);
					this.SendPropertyChanging();
					this._UserAdmin = value;
					this.SendPropertyChanged("UserAdmin");
					this.OnUserAdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserActivated", DbType="Bit NOT NULL")]
		public bool UserActivated
		{
			get
			{
				return this._UserActivated;
			}
			set
			{
				if ((this._UserActivated != value))
				{
					this.OnUserActivatedChanging(value);
					this.SendPropertyChanging();
					this._UserActivated = value;
					this.SendPropertyChanged("UserActivated");
					this.OnUserActivatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_User", Storage="_OrderChanged", ThisKey="UserID", OtherKey="User", DeleteRule="NO ACTION")]
		public EntitySet<OrderChanged> OrderChanged
		{
			get
			{
				return this._OrderChanged;
			}
			set
			{
				this._OrderChanged.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_User2", Storage="_VehicleSchedule", ThisKey="UserID", OtherKey="User", DeleteRule="NO ACTION")]
		public EntitySet<VehicleSchedule> VehicleSchedule
		{
			get
			{
				return this._VehicleSchedule;
			}
			set
			{
				this._VehicleSchedule.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OrderChanged(OrderChanged entity)
		{
			this.SendPropertyChanging();
			entity.UserUser = this;
		}
		
		private void detach_OrderChanged(OrderChanged entity)
		{
			this.SendPropertyChanging();
			entity.UserUser = null;
		}
		
		private void attach_VehicleSchedule(VehicleSchedule entity)
		{
			this.SendPropertyChanging();
			entity.UserUser = this;
		}
		
		private void detach_VehicleSchedule(VehicleSchedule entity)
		{
			this.SendPropertyChanging();
			entity.UserUser = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Vehicle")]
	public partial class Vehicle : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Platenum;
		
		private short _Status;
		
		private System.Nullable<decimal> _Type;
		
		private System.Nullable<double> _Capacity;
		
		private long _VehicleID;
		
		private string _Name;
		
		private System.Nullable<long> _Driver;
		
		private string _Address;
		
		private System.Nullable<System.DateTime> _Register;
		
		private EntityRef<Driver> _DriverDriver;
		
		private EntitySet<Order> _Order;
		
		private EntitySet<OrderChanged> _OrderChanged;
		
		private EntitySet<VehicleSchedule> _VehicleSchedule;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPlatenumChanging(string value);
    partial void OnPlatenumChanged();
    partial void OnStatusChanging(short value);
    partial void OnStatusChanged();
    partial void OnTypeChanging(System.Nullable<decimal> value);
    partial void OnTypeChanged();
    partial void OnCapacityChanging(System.Nullable<double> value);
    partial void OnCapacityChanged();
    partial void OnVehicleIDChanging(long value);
    partial void OnVehicleIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDriverChanging(System.Nullable<long> value);
    partial void OnDriverChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnRegisterChanging(System.Nullable<System.DateTime> value);
    partial void OnRegisterChanged();
    #endregion
		
		public Vehicle()
		{
			this._DriverDriver = default(EntityRef<Driver>);
			this._Order = new EntitySet<Order>(new Action<Order>(this.attach_Order), new Action<Order>(this.detach_Order));
			this._OrderChanged = new EntitySet<OrderChanged>(new Action<OrderChanged>(this.attach_OrderChanged), new Action<OrderChanged>(this.detach_OrderChanged));
			this._VehicleSchedule = new EntitySet<VehicleSchedule>(new Action<VehicleSchedule>(this.attach_VehicleSchedule), new Action<VehicleSchedule>(this.detach_VehicleSchedule));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Platenum", DbType="VarChar(100)")]
		public string Platenum
		{
			get
			{
				return this._Platenum;
			}
			set
			{
				if ((this._Platenum != value))
				{
					this.OnPlatenumChanging(value);
					this.SendPropertyChanging();
					this._Platenum = value;
					this.SendPropertyChanged("Platenum");
					this.OnPlatenumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="SmallInt NOT NULL")]
		public short Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Capacity", DbType="Float")]
		public System.Nullable<double> Capacity
		{
			get
			{
				return this._Capacity;
			}
			set
			{
				if ((this._Capacity != value))
				{
					this.OnCapacityChanging(value);
					this.SendPropertyChanging();
					this._Capacity = value;
					this.SendPropertyChanged("Capacity");
					this.OnCapacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VehicleID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long VehicleID
		{
			get
			{
				return this._VehicleID;
			}
			set
			{
				if ((this._VehicleID != value))
				{
					this.OnVehicleIDChanging(value);
					this.SendPropertyChanging();
					this._VehicleID = value;
					this.SendPropertyChanged("VehicleID");
					this.OnVehicleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(255)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Driver", DbType="BigInt")]
		public System.Nullable<long> Driver
		{
			get
			{
				return this._Driver;
			}
			set
			{
				if ((this._Driver != value))
				{
					if (this._DriverDriver.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDriverChanging(value);
					this.SendPropertyChanging();
					this._Driver = value;
					this.SendPropertyChanged("Driver");
					this.OnDriverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(1000)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Register", DbType="DateTime")]
		public System.Nullable<System.DateTime> Register
		{
			get
			{
				return this._Register;
			}
			set
			{
				if ((this._Register != value))
				{
					this.OnRegisterChanging(value);
					this.SendPropertyChanging();
					this._Register = value;
					this.SendPropertyChanged("Register");
					this.OnRegisterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Driver1", Storage="_DriverDriver", ThisKey="Driver", OtherKey="DriverID", IsForeignKey=true)]
		public Driver DriverDriver
		{
			get
			{
				return this._DriverDriver.Entity;
			}
			set
			{
				Driver previousValue = this._DriverDriver.Entity;
				if (((previousValue != value) 
							|| (this._DriverDriver.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DriverDriver.Entity = null;
						previousValue.Vehicle.Remove(this);
					}
					this._DriverDriver.Entity = value;
					if ((value != null))
					{
						value.Vehicle.Add(this);
						this._Driver = value.DriverID;
					}
					else
					{
						this._Driver = default(Nullable<long>);
					}
					this.SendPropertyChanged("DriverDriver");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_OrderVehicle", Storage="_Order", ThisKey="VehicleID", OtherKey="Vehicle", DeleteRule="NO ACTION")]
		public EntitySet<Order> Order
		{
			get
			{
				return this._Order;
			}
			set
			{
				this._Order.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Vehicle", Storage="_OrderChanged", ThisKey="VehicleID", OtherKey="Vehicle", DeleteRule="NO ACTION")]
		public EntitySet<OrderChanged> OrderChanged
		{
			get
			{
				return this._OrderChanged;
			}
			set
			{
				this._OrderChanged.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Vehicle2", Storage="_VehicleSchedule", ThisKey="VehicleID", OtherKey="Vehicle", DeleteRule="NO ACTION")]
		public EntitySet<VehicleSchedule> VehicleSchedule
		{
			get
			{
				return this._VehicleSchedule;
			}
			set
			{
				this._VehicleSchedule.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Order(Order entity)
		{
			this.SendPropertyChanging();
			entity.VehicleVehicle = this;
		}
		
		private void detach_Order(Order entity)
		{
			this.SendPropertyChanging();
			entity.VehicleVehicle = null;
		}
		
		private void attach_OrderChanged(OrderChanged entity)
		{
			this.SendPropertyChanging();
			entity.VehicleVehicle = this;
		}
		
		private void detach_OrderChanged(OrderChanged entity)
		{
			this.SendPropertyChanging();
			entity.VehicleVehicle = null;
		}
		
		private void attach_VehicleSchedule(VehicleSchedule entity)
		{
			this.SendPropertyChanging();
			entity.VehicleVehicle = this;
		}
		
		private void detach_VehicleSchedule(VehicleSchedule entity)
		{
			this.SendPropertyChanging();
			entity.VehicleVehicle = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VehicleSchedule")]
	public partial class VehicleSchedule : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<System.DateTime> _StartTime;
		
		private System.Nullable<System.DateTime> _EndTime;
		
		private System.Nullable<long> _Vehicle;
		
		private System.Nullable<long> _Driver;
		
		private System.Nullable<long> _User;
		
		private int _ScheduleID;
		
		private EntityRef<Driver> _DriverDriver;
		
		private EntityRef<User> _UserUser;
		
		private EntityRef<Vehicle> _VehicleVehicle;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStartTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnStartTimeChanged();
    partial void OnEndTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnEndTimeChanged();
    partial void OnVehicleChanging(System.Nullable<long> value);
    partial void OnVehicleChanged();
    partial void OnDriverChanging(System.Nullable<long> value);
    partial void OnDriverChanged();
    partial void OnUserChanging(System.Nullable<long> value);
    partial void OnUserChanged();
    partial void OnScheduleIDChanging(int value);
    partial void OnScheduleIDChanged();
    #endregion
		
		public VehicleSchedule()
		{
			this._DriverDriver = default(EntityRef<Driver>);
			this._UserUser = default(EntityRef<User>);
			this._VehicleVehicle = default(EntityRef<Vehicle>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartTime
		{
			get
			{
				return this._StartTime;
			}
			set
			{
				if ((this._StartTime != value))
				{
					this.OnStartTimeChanging(value);
					this.SendPropertyChanging();
					this._StartTime = value;
					this.SendPropertyChanged("StartTime");
					this.OnStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndTime
		{
			get
			{
				return this._EndTime;
			}
			set
			{
				if ((this._EndTime != value))
				{
					this.OnEndTimeChanging(value);
					this.SendPropertyChanging();
					this._EndTime = value;
					this.SendPropertyChanged("EndTime");
					this.OnEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vehicle", DbType="BigInt")]
		public System.Nullable<long> Vehicle
		{
			get
			{
				return this._Vehicle;
			}
			set
			{
				if ((this._Vehicle != value))
				{
					if (this._VehicleVehicle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVehicleChanging(value);
					this.SendPropertyChanging();
					this._Vehicle = value;
					this.SendPropertyChanged("Vehicle");
					this.OnVehicleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Driver", DbType="BigInt")]
		public System.Nullable<long> Driver
		{
			get
			{
				return this._Driver;
			}
			set
			{
				if ((this._Driver != value))
				{
					if (this._DriverDriver.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDriverChanging(value);
					this.SendPropertyChanging();
					this._Driver = value;
					this.SendPropertyChanged("Driver");
					this.OnDriverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User", DbType="BigInt")]
		public System.Nullable<long> User
		{
			get
			{
				return this._User;
			}
			set
			{
				if ((this._User != value))
				{
					if (this._UserUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserChanging(value);
					this.SendPropertyChanging();
					this._User = value;
					this.SendPropertyChanged("User");
					this.OnUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScheduleID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ScheduleID
		{
			get
			{
				return this._ScheduleID;
			}
			set
			{
				if ((this._ScheduleID != value))
				{
					this.OnScheduleIDChanging(value);
					this.SendPropertyChanging();
					this._ScheduleID = value;
					this.SendPropertyChanged("ScheduleID");
					this.OnScheduleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Driver2", Storage="_DriverDriver", ThisKey="Driver", OtherKey="DriverID", IsForeignKey=true)]
		public Driver DriverDriver
		{
			get
			{
				return this._DriverDriver.Entity;
			}
			set
			{
				Driver previousValue = this._DriverDriver.Entity;
				if (((previousValue != value) 
							|| (this._DriverDriver.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DriverDriver.Entity = null;
						previousValue.VehicleSchedule.Remove(this);
					}
					this._DriverDriver.Entity = value;
					if ((value != null))
					{
						value.VehicleSchedule.Add(this);
						this._Driver = value.DriverID;
					}
					else
					{
						this._Driver = default(Nullable<long>);
					}
					this.SendPropertyChanged("DriverDriver");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_User2", Storage="_UserUser", ThisKey="User", OtherKey="UserID", IsForeignKey=true)]
		public User UserUser
		{
			get
			{
				return this._UserUser.Entity;
			}
			set
			{
				User previousValue = this._UserUser.Entity;
				if (((previousValue != value) 
							|| (this._UserUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserUser.Entity = null;
						previousValue.VehicleSchedule.Remove(this);
					}
					this._UserUser.Entity = value;
					if ((value != null))
					{
						value.VehicleSchedule.Add(this);
						this._User = value.UserID;
					}
					else
					{
						this._User = default(Nullable<long>);
					}
					this.SendPropertyChanged("UserUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FK_Vehicle2", Storage="_VehicleVehicle", ThisKey="Vehicle", OtherKey="VehicleID", IsForeignKey=true)]
		public Vehicle VehicleVehicle
		{
			get
			{
				return this._VehicleVehicle.Entity;
			}
			set
			{
				Vehicle previousValue = this._VehicleVehicle.Entity;
				if (((previousValue != value) 
							|| (this._VehicleVehicle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VehicleVehicle.Entity = null;
						previousValue.VehicleSchedule.Remove(this);
					}
					this._VehicleVehicle.Entity = value;
					if ((value != null))
					{
						value.VehicleSchedule.Add(this);
						this._Vehicle = value.VehicleID;
					}
					else
					{
						this._Vehicle = default(Nullable<long>);
					}
					this.SendPropertyChanged("VehicleVehicle");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
